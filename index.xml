<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/"><channel><title>About on CellSV</title><link>http://matiasagelvis.com/cellsv/</link><description>Recent content in About on CellSV</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="http://matiasagelvis.com/cellsv/index.xml" rel="self" type="application/rss+xml"/><item><title>CellSV to XML</title><link>http://matiasagelvis.com/cellsv/csv2xml/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://matiasagelvis.com/cellsv/csv2xml/</guid><description>-- Convert --
-- function processFile(upload) { console.debug(upload) // create the file reader let reader = new FileReader() // prepare the download name let downloadName = replaceExtension(upload.name, 'xml') reader.readAsText(upload) reader.addEventListener("load", () = { let result = convert2xml(reader.result) if (result != null) { saveData(str2blob(result), downloadName) } }, false) } function convert2xml(csv) { // convert to json // replace the quotations with numerals, and put the value in a cell csv = csv.</description></item><item><title>Pricing</title><link>http://matiasagelvis.com/cellsv/pricing/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://matiasagelvis.com/cellsv/pricing/</guid><description>Free This website is completely free and open-source, use it has much has you want.
If you want to keep this website and others alike running consider donating ❤️.
Or check my other projects.</description></item><item><title>XML to CellSV</title><link>http://matiasagelvis.com/cellsv/xml2csv/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>http://matiasagelvis.com/cellsv/xml2csv/</guid><description>-- Convert --
-- function processFile(upload) { console.debug(upload) // create the file reader let reader = new FileReader() // prepare the download name let downloadName = replaceExtension(upload.name, 'csv') reader.readAsText(upload) reader.addEventListener("load", () = { let result = convert2csv(reader.result) if (result != null) { saveData(str2blob(result), downloadName) } }, false) } function convert2csv(xml) { let x2js = new X2JS() let json = x2js.xml_str2json(xml) if(json==null){ Swal.fire({ icon: 'error', title: 'Oops.</description></item></channel></rss>